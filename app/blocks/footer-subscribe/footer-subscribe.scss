@import '../../styles/helpers/variables';
@import '../../styles/helpers/mixins';

.f-subscribe {
	$search-form-height: 2.8rem;

	width: 29.6rem;
	max-width: 100%;

	@include below($lg) {
		width: calc(50% + 10.1rem);
	}

	&__form {
		position: relative;
	}

	&__field {
		position: relative;
		border-bottom: 1px solid rgba(white, 0.6);
	}

	&__label {
		@include below($lg) {
			margin-bottom: 0.8rem;
		}

		&-inner {
			font-weight: 600;
			font-size: 1.4rem;
			line-height: 2.8rem;
			color: rgba(white, 0.7);
		}
	}

	&__input {
		$font-size: 1.3rem;
		$line-height: 2rem;
		$ident-v: #{round-float(($search-form-height - $line-height) / 2, 1)};

		display: block;
		padding: #{$ident-v} 0 #{$ident-v};
		width: calc(100% - 10.5rem);
		height: $search-form-height;
		color: white;
		cursor: text;
		background: none;
		box-shadow: none;
		border: none;
		border-radius: 0;
		font-family: inherit;
		font-size: $font-size;
		line-height: $line-height;

		@include input-placeholder {
			color: rgba(white, 0.7);
			transition: opacity $animation-speed;
		}

		@include input-placeholder-focus {
			color: rgba(white, 0.7);
			opacity: 0;
		}
	}

	&__submit {
		$btn: &;

		position: absolute;
		top: 50%;
		right: -0.8rem;
		width: 10.9rem;
		color: $link-color;
		cursor: pointer;
		transform: translate(0, -50%);
		user-select: none;
		transition: opacity $animation-speed;

		&::before {
			content: "";
			display: block;

			@include ratio(109, 24);
		}

		&-bg {
			position: absolute;
			left: 0;
			top: 0;
			height: 100%;
			width: 100%;

			&::before,
			&::after {
				content: "";
				position: absolute;
				left: 0;
				top: 0;
				height: 100%;
				width: 100%;
				background-position: center;
				background-repeat: no-repeat;
				background-size: contain;
				transition: opacity $animation-speed;
			}

			&::before {
				background-image: url('../images/icons/icon-subscribe_gradient.svg');
				opacity: 0;

				html:lang(ru) & {
					background-image: url('../images/icons/icon-subscribe_ru_gradient.svg');
				}
			}

			&::after {
				background-image: url('../images/icons/icon-subscribe_white.svg');
				opacity: 0.7;

				html:lang(ru) & {
					background-image: url('../images/icons/icon-subscribe_ru_white.svg');
				}
			}

			@at-root {
				#{$btn}:hover & {
					&::before {
						opacity: 1;
					}

					&::after {
						opacity: 0;
					}
				}
			}
		}

		&-text {
			@include hide-text;
		}

		&-input {
			position: absolute;
			left: 0;
			top: 0;
			width: 100%;
			height: 100%;
			border: none;
			background: none;
			box-shadow: none;
			padding: 0;
			margin: 0;
			cursor: pointer;
		}
	}

	&__checkbox {
		$checkbox-size: 1.8rem !default;
		$checkbox-check-size: 0.6rem 1rem !default;

		display: inline-block;
		vertical-align: top;
		margin: 1rem 0 0;
		font-size: 1.2rem;
		line-height: 1.8rem;
		color: white;
		user-select: none;
		-webkit-tap-highlight-color: transparent;
		transition: opacity $animation-speed;
		opacity: 0.7;

		&:hover {
			opacity: 1;
		}

		// Hide default inputs
		input[type="checkbox"] {
			position: absolute;
			height: 16px;
			width: 16px;
			padding: 0;
			margin: 0;
			display: none;

			& ~ span {
				position: relative;
				display: inline-block;
				vertical-align: top;
				padding-left: 2.7rem;
				cursor: pointer;

				&::before,
				&::after {
					content: "";
					display: block;
					position: absolute;
					transition: border-color ease-in-out 0.2s;
					box-sizing: border-box;
				}

				&::before {
					left: 0;
					top: 50%;
					border: 1px solid currentColor;
					width: $checkbox-size;
					height: $checkbox-size;
					margin: -#{round-float($checkbox-size / 2, 1)} 0;
					border-radius: 0.3rem;
					transition: opacity $animation-speed;
				}

				&::after {
					opacity: 0;
					left: 0;
					top: 50%;
					height: nth($checkbox-check-size, 1);
					width: nth($checkbox-check-size, 2);
					margin: -#{round-float(nth($checkbox-check-size, 1) / 2, 1) + 0.1} #{round-float(($checkbox-size - nth($checkbox-check-size, 2)) / 2, 1)};
					border: solid currentColor;
					border-width: 0 0 0.2rem 0.2rem;
					transform: rotate(-30deg) scale3d(1.1, 1.1, 1);
					transition: transform cubic-bezier(0.45, -1.1, 0.45, 2.1) 0.22s, opacity ease-in-out 0.2s;
				}
			}

			// Checked
			&:checked {
				& ~ span {
					&::after {
						opacity: 1;
						transform: rotate(-45deg) scale3d(1, 1, 1);
					}
				}
			}
		}
	}

	&__note {
		position: absolute;
		left: 0;
		top: 100%;
		padding: 0.5rem 0;
		font-weight: 600;
		font-size: 1.2rem;
		line-height: 1.8rem;
		color: rgba(white, 0.7);
	}
}
